from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
from datetime import datetime, timedelta
import calendar
from typing import List, Tuple, Optional, Dict

from app.config import WEBAPP_URL


# ==================== –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —É—Å–ª—É–≥–∞–º–∏ ====================

def services_keyboard(services, is_admin=False):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —É—Å–ª—É–≥–∏"""
    kb = []
    for service in services:
        kb.append([
            InlineKeyboardButton(
                text=f"{service.name} - {service.price:,.0f} —Å—É–º" + ("/—á–∞—Å" if service.is_hourly else ""),
                callback_data=f"service_{service.id}"
            )
        ])

    # –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    if is_admin:
        kb.append([InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —É—Å–ª—É–≥—É", callback_data="add_service")])

    kb.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")])
    return InlineKeyboardMarkup(inline_keyboard=kb)


def service_detail_keyboard(service_id):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —É—Å–ª—É–≥–∏"""
    kb = [
        [
            InlineKeyboardButton(text="üìù –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"book_service_{service_id}")
        ],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data="back_to_services")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=kb)


def calendar_keyboard(date):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã –≤ –≤–∏–¥–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è"""
    kb = []

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—è —Å —Ç–µ–∫—É—â–∏–º –º–µ—Å—è—Ü–µ–º –∏ –≥–æ–¥–æ–º
    year = date.year
    month = date.month
    month_name = {
        1: "–Ø–Ω–≤–∞—Ä—å", 2: "–§–µ–≤—Ä–∞–ª—å", 3: "–ú–∞—Ä—Ç", 4: "–ê–ø—Ä–µ–ª—å",
        5: "–ú–∞–π", 6: "–ò—é–Ω—å", 7: "–ò—é–ª—å", 8: "–ê–≤–≥—É—Å—Ç",
        9: "–°–µ–Ω—Ç—è–±—Ä—å", 10: "–û–∫—Ç—è–±—Ä—å", 11: "–ù–æ—è–±—Ä—å", 12: "–î–µ–∫–∞–±—Ä—å"
    }

    kb.append([
        InlineKeyboardButton(text=f"{month_name[month]} {year}", callback_data="ignore")
    ])

    # –î–Ω–∏ –Ω–µ–¥–µ–ª–∏
    days_of_week = ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–í—Å"]
    days_row = []
    for day in days_of_week:
        days_row.append(InlineKeyboardButton(text=day, callback_data="ignore"))
    kb.append(days_row)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å –º–µ—Å—è—Ü–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π
    first_day = datetime(year, month, 1)
    num_days = calendar.monthrange(year, month)[1]

    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ —è—á–µ–π–∫–∏ –¥–æ –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è –º–µ—Å—è—Ü–∞
    # –í Python –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - 0, –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ - 6
    first_weekday = first_day.weekday()  # 0 - –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, 6 - –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ

    # –ó–∞–ø–æ–ª–Ω—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–Ω—è–º–∏
    current_row = []
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–µ —è—á–µ–π–∫–∏ –¥–æ –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è –º–µ—Å—è—Ü–∞
    for _ in range(first_weekday):
        current_row.append(InlineKeyboardButton(text=" ", callback_data="ignore"))

    # –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è
    today = datetime.now().date()

    # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ (—Å–µ–≥–æ–¥–Ω—è)
    min_date = today
    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ (—Å–µ–≥–æ–¥–Ω—è + 90 –¥–Ω–µ–π)
    max_date = today + timedelta(days=90)

    # –î–æ–±–∞–≤–ª—è–µ–º –¥–Ω–∏ –º–µ—Å—è—Ü–∞
    for day in range(1, num_days + 1):
        current_date = datetime(year, month, day).date()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –¥–∞—Ç–∞ –≤ –¥–æ–ø—É—Å—Ç–∏–º–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
        is_selectable = min_date <= current_date <= max_date

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏
        if current_date == today:
            # –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å
            btn_text = f"[{day}]"
        else:
            btn_text = str(day)

        if is_selectable:
            # –ö–Ω–æ–ø–∫–∞ —Å –¥–∞—Ç–æ–π, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å
            btn_data = f"calendar_day_{current_date.strftime('%Y-%m-%d')}"
        else:
            # –ù–µ–∞–∫—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞
            btn_data = "ignore"

        current_row.append(InlineKeyboardButton(text=btn_text, callback_data=btn_data))

        # –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–∏ –∫–æ–Ω—Ü–∞ –Ω–µ–¥–µ–ª–∏ –∏–ª–∏ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        if len(current_row) == 7 or day == num_days:
            kb.append(current_row)
            current_row = []

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    kb.append([
        InlineKeyboardButton(
            text="¬´ –ü—Ä–µ–¥—ã–¥—É—â–∏–π",
            callback_data=f"calendar_prev_{date.strftime('%Y-%m')}"
        ),
        InlineKeyboardButton(
            text="–°–ª–µ–¥—É—é—â–∏–π ¬ª",
            callback_data=f"calendar_next_{date.strftime('%Y-%m')}"
        )
    ])

    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
    kb.append([InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="cancel_booking")])

    return InlineKeyboardMarkup(inline_keyboard=kb)


def service_booking_keyboard(available_slots):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å–ª—É–≥–∏"""
    kb = []

    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ 2 —Å–ª–æ—Ç–∞ –≤ —Å—Ç—Ä–æ–∫–µ
    row = []
    for start_time, end_time in available_slots:
        btn_text = f"{start_time} - {end_time}"
        btn_data = f"time_{start_time}_{end_time}"

        row.append(InlineKeyboardButton(text=btn_text, callback_data=btn_data))

        if len(row) == 2:
            kb.append(row)
            row = []

    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —Å–ª–æ—Ç—ã
    if row:
        kb.append(row)

    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
    kb.append([InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="cancel_booking")])

    return InlineKeyboardMarkup(inline_keyboard=kb)


def confirm_cancel_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è"""
    kb = [
        [
            InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm"),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=kb)


# ==================== –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏ ====================

def admin_keyboard(admin):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏"""
    kb = []

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    if admin.can_manage_rooms:
        kb.append([InlineKeyboardButton(text="üõèÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞–º–∏", callback_data="admin_rooms")])

    if admin.can_manage_bookings:
        kb.append([InlineKeyboardButton(text="üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏", callback_data="admin_bookings")])

    if admin.can_manage_services:
        kb.append([InlineKeyboardButton(text="üèä‚Äç‚ôÇÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ø. —É—Å–ª—É–≥–∞–º–∏", callback_data="admin_services")])

    if admin.is_superadmin:
        kb.append([InlineKeyboardButton(text="üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏", callback_data="admin_users")])

    kb.append([InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats")])
    kb.append([InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")])

    return InlineKeyboardMarkup(inline_keyboard=kb)


def room_availability_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å—é –Ω–æ–º–µ—Ä–æ–≤"""
    kb = [
        [InlineKeyboardButton(text="üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–Ω—è—Ç–æ—Å—Ç–∏", callback_data="room_calendar")],
        [InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", callback_data="add_room")],
        [InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–Ω—ã", callback_data="edit_prices")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_admin")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=kb)


# ==================== –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π ====================

def payment_methods_keyboard(booking_id, booking_type="booking"):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã"""
    kb = [
        [InlineKeyboardButton(text="üí≥ PayMe", callback_data=f"pay_{booking_type}_{booking_id}_payme")],
        [InlineKeyboardButton(text="üí≥ Click", callback_data=f"pay_{booking_type}_{booking_id}_click")],
        [InlineKeyboardButton(text="üíµ –û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –∑–∞—Å–µ–ª–µ–Ω–∏–∏", callback_data=f"pay_{booking_type}_{booking_id}_cash")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=kb)


# ==================== –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã ====================

def updated_main_keyboard():
    """–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –æ—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏"""
    kb = [
        [KeyboardButton(text="üè® –û –∫—É—Ä–æ—Ä—Ç–µ"), KeyboardButton(text="üõèÔ∏è –ù–æ–º–µ—Ä–∞")],
        [KeyboardButton(text="üìù –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", web_app=WebAppInfo(url=WEBAPP_URL))],
        [KeyboardButton(text="üèä‚Äç‚ôÇÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏"), KeyboardButton(text="üìÖ –ú–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")],
        [KeyboardButton(text="üìû –°–≤—è–∑—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π"), KeyboardButton(text="‚≠ê –û—Ç–∑—ã–≤—ã")]
    ]
    return ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)